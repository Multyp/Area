version: "3.5"

services:
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5432:5432
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db_data:/var/lib/postgresql/data
    networks:
      - mynet

  server-local:
    image: server-local
    build:
      context: ./server/
      dockerfile: Dockerfile.local
    volumes:
      - ./server:/app
      - /app/node_modules
    restart: always
    ports:
    - 8080:8080
    depends_on:
      - db
    networks:
      - mynet

  nextjs-local:
    image: nextjs-local
    build:
      context: ./web/
      dockerfile: Dockerfile.local
    volumes:
      - ./web:/app
      - /app/node_modules
      - shared_volume:/app/public/mobile
    restart: always
    ports:
      - 8081:8081
    networks:
      - mynet
    #depends_on:
    #  - mobile

  nginx-local:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/local.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - nextjs-local
      - server-local
    ports:
      - "80:80"
    networks:
      - mynet

  # mobile:
  #   image: mobile
  #   build:
  #     context: ./mobile/
  #     dockerfile: Dockerfile
  #   volumes:
  #     - shared_volume:/app/public/mobile
  #   networks:
  #     - mynet

  dev-client-local:
    image: dev-client-local
    build:
      context: ./dev-client/
      dockerfile: Dockerfile
    restart: always
    volumes:
      - ./dev-client:/app
      - /app/node_modules
    networks:
      - mynet
    depends_on:
      - server-local

networks:
  mynet:
    driver: bridge

volumes:
  db_data:
  shared_volume:
